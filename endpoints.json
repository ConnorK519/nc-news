{
  "GET /api": {
    "description": "serves up a json representation of all the available endpoints of the api"
  },
  "GET /api/users": {
    "description": "responds with an array of users objects"
  },
  "GET /api/topics": {
    "description": "serves an array of all topics",
    "queries": [],
    "exampleResponse": {
      "topics": [{ "slug": "football", "description": "Footie!" }]
    }
  },
  "GET /api/articles": {
    "description": "serves an array of all topics sorted by date in ascending order by default if not passed a query",
    "queries": {
      "topic": ["coding", "football", "cooking"],
      "sort_by": [
        "author",
        "title",
        "id",
        "topic",
        "date",
        "votes",
        "comment_count"
      ],
      "order": ["ASC", "DESC"]
    },
    "exampleResponse": {
      "articles": [
        {
          "title": "Seafood substitutions are increasing",
          "topic": "cooking",
          "author": "weegembump",
          "body": "Text from the article..",
          "created_at": "2018-05-30T15:59:13.341Z",
          "votes": 0,
          "comment_count": 6
        }
      ]
    }
  },
  "GET /api/articles/:article_id": {
    "description": "serves an article that has the corresponding article id that was passed",
    "params": "It takes any number. If the number is not the id number of an article it responds with a error 404 not found",
    "example endpoint": "/api/articles/7"
  },
  "PATCH /api/articles/:article_id": {
    "description": "this endpoint is used to increase or decrease the number of votes on an article.",
    "example endpoint": "/api/articles/5",
    "Input format": "it takes an object formatted as such: { votes: 3 } this would add 3 votes"
  },

  "GET /api/articles/:article_id/comments": {
    "description": "responds with an array of comments for the article with the passed id",
    "params": "It takes any number. If the number is not the id number of an article it responds with a error 404",
    "example endpoint": "/api/articles/2/comments"
  },
  "POST /api/articles/:article_id/comments": {
    "description": "this endpoint is used to make a comment on an article based on the passed article id",
    "example endpoint": "/api/articles/3/comments",
    "example comment": {
      "author": "valid username",
      "body": "this is where the comment goes"
    }
  },
  "DELETE /api/comments/:comment_id": {
    "description": "this endpoint deletes a comment by it's id",
    "example endpoint": "/api/comments/6"
  }
}
